package com.lms.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.lms.bean.Book;
import com.lms.bean.Employee;
import com.lms.model.service.BookService;

@Controller
public class BookController {
	
	@Autowired
	private BookService bs;
	
	

	@RequestMapping("showBooks")
	public ModelAndView  showBook() {
		
		List<Book> bookList= bs.getAllBooks();
		return new ModelAndView("ShowAllBooks", "bookList", bookList);
	}
	
	@RequestMapping("addBook")
	public ModelAndView addBook() {
		
		return new ModelAndView("inputBookDetails","book",new Book());
	}
	
	@RequestMapping("/saveBook")
public ModelAndView saveBook(@ModelAttribute("book") Book book) {
        ModelAndView modelAndView = new ModelAndView();

        String message = null;
        if (bs.addBook(book))
            message = "Book Addded Successfully";
        else
            message = "Book Addition Failed";

        modelAndView.addObject("message", message);
        modelAndView.setViewName("Output2");

        return modelAndView;
    }

	
	 @RequestMapping("/inputBookNamePageForDelete")
	    public ModelAndView inputEmpIdPageForDeleteController() {
	        return new ModelAndView("InputBookName","command",new Book());
	    }
	    

	    @RequestMapping("/removeBook")
	    public ModelAndView deleteEmployeeController(@ModelAttribute("command") Employee employee) {
	        ModelAndView modelAndView = new ModelAndView();

	        String message = "";
	        if (employeeService.removeEmployee(employee.getEmployeeId()))
	            message = "Employee with ID " + employee.getEmployeeId() + " Deleted !";
	        else
	            message = "Employee with ID " + employee.getEmployeeId() + " Does not exist !";

	        modelAndView.addObject("message", message);
	        modelAndView.setViewName("Output");

	        return modelAndView;
	    }

}
